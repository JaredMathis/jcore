{
 "file_path": "src\\js\\code\\export\\function\\synchronized.mjs",
 "part_id": "8ee786d1-7819-4b4a-a591-b9dabafdc4a3",
 "hunks": [
  "0+import { arguments_assert } from '../../../../arguments/assert.mjs';\nimport { metadata } from '../../../../metadata.mjs';\nimport { string_length } from '../../../../string/length.mjs';\nimport { assert } from '../../../../assert.mjs';\nimport { js_keyword_async } from '../../../keyword/async.mjs';\nimport { string_empty } from '../../../../string/empty.mjs';\nimport { string_identifier_is } from '../../../../string/identifier/is.mjs';\nimport { boolean_is } from '../../../../boolean/is.mjs';\nimport { string_is } from '../../../../string/is.mjs';\nexport function js_code_export_function_synchronized(function_name, is_async, function_statements_code) {\n    arguments_assert(arguments, [\n        string_identifier_is,\n        boolean_is,\n        string_is\n    ]);\n    assert(string_length(function_name) >= 1);\n    let async_code = string_empty();\n    if (is_async) {\n        async_code = js_keyword_async();\n    }\n    let result = `export ${ async_code } function ${ function_name }() { ${ function_statements_code } }`;\n    return result;\n    metadata([]);\n}"
 ]
}