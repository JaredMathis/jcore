{
 "file_path": "src\\js\\mapper\\args\\to\\statement\\arguments\\assert.mjs",
 "part_id": "420f5029-1868-4eb2-82d4-dd454233658e",
 "hunks": [
  "0+import { js_mapper_args_is } from '../../../is.mjs';\nimport { js_function_delcaration_to_statement_first } from '../../../../../function/delcaration/to/statement/first.mjs';\nimport { refactor_arguments_assert_add_no_check } from '../../../../../../refactor/arguments/assert/add/no/check.mjs';\nimport { arguments_assert } from '../../../../../../arguments/assert.mjs';\nimport { function_name_get } from '../../../../../../function/name/get.mjs';\nimport { js_node_call_expression_statement_if_name_equal } from '../../../../../node/call/expression/statement/if/name/equal.mjs';\nimport { list_first } from '../../../../../../list/first.mjs';\nimport { js_function_delcaration_to_statements } from '../../../../../function/delcaration/to/statements.mjs';\nimport { list_length_is_0 } from '../../../../../../list/length/is/0.mjs';\nimport { refactor_functions_arguments_assert_missing_add_excludes } from '../../../../../../refactor/functions/arguments/assert/missing/add/excludes.mjs';\nimport { assert } from '../../../../../../assert.mjs';\nimport { js_node_is_function_declaration } from '../../../../../node/is/function/declaration.mjs';\nexport async function js_mapper_args_to_statement_arguments_assert(args) {\n    arguments_assert(arguments, [js_mapper_args_is]);\n    let {function_declaration} = args;\n    assert(js_node_is_function_declaration(function_declaration));\n    let statements = js_function_delcaration_to_statements(function_declaration);\n    let exists = false;\n    if (!list_length_is_0(statements)) {\n        let statement_first = list_first(statements);\n        js_node_call_expression_statement_if_name_equal(statement_first, function_name_get(arguments_assert), function on_name_equal() {\n            exists = true;\n        });\n    }\n    if (!exists) {\n        let excludes = await refactor_functions_arguments_assert_missing_add_excludes();\n        refactor_arguments_assert_add_no_check(function_declaration, excludes);\n    }\n    return js_function_delcaration_to_statement_first(function_declaration);\n}"
 ]
}