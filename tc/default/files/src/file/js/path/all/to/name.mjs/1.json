{
 "file_path": "src\\file\\js\\path\\all\\to\\name.mjs",
 "part_id": "432f1389-d646-4af4-b023-4beb5ff1232d",
 "hunks": [
  "0+import { list_is } from '../../../../../list/is.mjs';\nimport { arguments_assert } from '../../../../../arguments/assert.mjs';\nimport { metadata } from '../../../../../metadata.mjs';\nimport { function_extension } from '../../../../../function/extension.mjs';\nimport { string_suffix_without } from '../../../../../string/suffix/without.mjs';\nimport { list_join } from '../../../../../list/join.mjs';\nimport { function_name_separator } from '../../../../../function/name/separator.mjs';\nimport { list_skip_first } from '../../../../../list/skip/first.mjs';\nimport { list_first } from '../../../../../list/first.mjs';\nimport { assert } from '../../../../../assert.mjs';\nimport { directory_source } from '../../../../../directory/source.mjs';\nimport { file_path_split } from '../../../../path/split.mjs';\nimport { list_map } from '../../../../../list/map.mjs';\nexport function file_js_path_all_to_name(file_js_paths) {\n    arguments_assert(arguments, [list_is]);\n    let mapped = list_map(file_js_paths, a => file_path_split(a));\n    let directory_source_result = directory_source();\n    let mapped2 = list_map(mapped, a => {\n        assert(list_first(a) === directory_source_result);\n        return list_skip_first(a);\n    });\n    let mapped3 = list_map(mapped2, a => list_join(a, function_name_separator()));\n    let mapped4 = list_map(mapped3, a => string_suffix_without(a, function_extension()));\n    return mapped4;\n    metadata([]);\n}"
 ]
}