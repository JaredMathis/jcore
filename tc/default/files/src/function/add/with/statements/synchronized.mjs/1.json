{
 "file_path": "src\\function\\add\\with\\statements\\synchronized.mjs",
 "part_id": "9d4b74ed-b0a8-4218-a197-69b0c41df49b",
 "hunks": [
  "0+import { boolean_is } from '../../../../boolean/is.mjs';\nimport { list_is } from '../../../../list/is.mjs';\nimport { string_identifier_is } from '../../../../string/identifier/is.mjs';\nimport { arguments_assert } from '../../../../arguments/assert.mjs';\nimport { metadata } from '../../../../metadata.mjs';\nimport { function_write } from '../../../write.mjs';\nimport { js_function_declaration_asyncify } from '../../../../js/function/declaration/asyncify.mjs';\nimport { js_function_declaration_statements_initialize } from '../../../../js/function/declaration/statements/initialize.mjs';\nimport { js_exported_function_declaration_single } from '../../../../js/exported/function/declaration/single.mjs';\nimport { js_parse } from '../../../../js/parse.mjs';\nimport { js_function_name_to_export } from '../../../../js/function/name/to/export.mjs';\nexport async function function_add_with_statements_synchronized(function_name, statements, is_async) {\n    arguments_assert(arguments, [\n        string_identifier_is,\n        list_is,\n        boolean_is\n    ]);\n    const code = js_function_name_to_export(function_name);\n    let parsed = js_parse(code);\n    let fd = js_exported_function_declaration_single(parsed);\n    js_function_declaration_statements_initialize(fd, statements);\n    if (is_async) {\n        js_function_declaration_asyncify(fd);\n    }\n    return await function_write(function_name, parsed);\n    metadata([]);\n}"
 ]
}