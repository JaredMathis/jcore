{
 "file_path": "src\\refactor\\import\\path\\fix.mjs",
 "part_id": "9f3090c0-da85-4e8a-babb-c688bb789b71",
 "hunks": [
  "0+import { arguments_assert } from '../../../arguments/assert.mjs';\nimport { metadata } from '../../../metadata.mjs';\nimport { js_node_property_source } from '../../../js/node/property/source.mjs';\nimport { js_node_property_raw } from '../../../js/node/property/raw.mjs';\nimport { function_name_to_file_path } from '../../../function/name/to/file/path.mjs';\nimport { js_import_all_with_function_names } from '../../../js/import/all/with/function/names.mjs';\nimport { object_property_get } from '../../../object/property/get.mjs';\nimport { object_property_set } from '../../../object/property/set.mjs';\nimport { string_includes } from '../../../string/includes.mjs';\nimport { path_relative_file } from '../../../path/relative/file.mjs';\nimport { js_import_path_normalize } from '../../../js/import/path/normalize.mjs';\nimport { assert } from '../../../assert.mjs';\nimport { js_node_property_value } from '../../../js/node/property/value.mjs';\nimport { js_mapper_args_is } from '../../../js/mapper/args/is.mjs';\nexport async function refactor_import_path_fix(args) {\n    arguments_assert(arguments, [js_mapper_args_is]);\n    let {parsed} = args;\n    let file_path = object_property_get(args, 'file_path');\n    let imports = await js_import_all_with_function_names(parsed);\n    for (let iw of imports) {\n        let function_name = object_property_get(iw, 'name');\n        let function_path = function_name_to_file_path(function_name);\n        let relative = path_relative_file(file_path, function_path);\n        let normalized = js_import_path_normalize(relative);\n        let i = object_property_get(iw, 'import');\n        let source = object_property_get(i, js_node_property_source());\n        object_property_set(source, js_node_property_value(), normalized);\n        assert(!string_includes(normalized, '\\''));\n        let raw = `'${ normalized }'`;\n        object_property_set(source, js_node_property_raw(), raw);\n    }\n    metadata([]);\n}"
 ]
}